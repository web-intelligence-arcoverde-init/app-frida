{
  "compilerOptions": {
    "rootDirs": ["src", "stories"],
    "target": "esnext" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
    "module": "es2015" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    "lib": ["es6", "dom"],
    "allowJs": true,
    "checkJs": true,
    "jsx": "react-native",
    "noEmit": false,
    // Revisar se essa regra é necessária, pois está conflitando com noEmit
    // "incremental": true,
    // Essa regra não permite re-exportar tipos, porém ela otimiza a compilação
    // "isolatedModules": true,
    "sourceMap": true,
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "resolveJsonModule": true,
    "typeRoots": ["./types/", "node_modules/@types"],
    "baseUrl": "." /* Base directory to resolve non-absolute module names. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "paths": {
      "_assets": ["./src/assets"],
      "_components": ["./src/components"],
      "_service": ["./src/service"],
      "_router": ["./src/routers"],
      "_store": ["./src/store"],
      "_utils": ["./src/utils"],
      "_types": ["./src/types"],
      "_hooks": ["./src/hooks"]
    },
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true
  },
  "includes": ["svg.d.ts"],
  "include": ["src/**/*.ts", "src/**/*.tsx"],
  "exclude": [
    "node_modules",
    "babel.config.js",
    "metro.config.js",
    "jest.config.js"
  ]
}
